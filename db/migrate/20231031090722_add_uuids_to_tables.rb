class AddUuidsToTables < ActiveRecord::Migration[5.2]
  def change
    add_column :active_list, :uuid, :string, length: 32 unless column_exists?(:active_list, :uuid)
    add_column :active_list_type, :uuid, :string, length: 32 unless column_exists?(:active_list_type, :uuid)
    add_column :cohort, :uuid, :string, length: 32 unless column_exists?(:cohort, :uuid)
    add_column :concept, :uuid, :string, length: 32 unless column_exists?(:concept, :uuid)
    add_column :concept_answer, :uuid, :string, length: 32 unless column_exists?(:concept_answer, :uuid)
    add_column :concept_class, :uuid, :string, length: 32 unless column_exists?(:concept_class, :uuid)
    add_column :concept_datatype, :uuid, :string, length: 32 unless column_exists?(:concept_datatype, :uuid)
    add_column :concept_description, :uuid, :string, length: 32 unless column_exists?(:concept_description, :uuid)
    add_column :concept_map, :uuid, :string, length: 32 unless column_exists?(:concept_map, :uuid)
    add_column :concept_name, :uuid, :string, length: 32 unless column_exists?(:concept_name, :uuid)
    add_column :concept_name_tag, :uuid, :string, length: 32 unless column_exists?(:concept_name_tag, :uuid)
    add_column :concept_proposal, :uuid, :string, length: 32 unless column_exists?(:concept_proposal, :uuid)
    add_column :concept_set, :uuid, :string, length: 32 unless column_exists?(:concept_set, :uuid)
    add_column :concept_source, :uuid, :string, length: 32 unless column_exists?(:concept_source, :uuid)
    add_column :concept_state_conversion, :uuid, :string, length: 32 unless column_exists?(:concept_state_conversion, :uuid)
    add_column :drug, :uuid, :string, length: 32 unless column_exists?(:drug, :uuid)
    add_column :encounter, :uuid, :string, length: 32 unless column_exists?(:encounter, :uuid)
    add_column :encounter_type, :uuid, :string, length: 32 unless column_exists?(:encounter_type, :uuid)
    add_column :field, :uuid, :string, length: 32 unless column_exists?(:field, :uuid)
    add_column :field_answer, :uuid, :string, length: 32 unless column_exists?(:field_answer, :uuid)
    add_column :field_type, :uuid, :string, length: 32 unless column_exists?(:field_type, :uuid)
    add_column :form, :uuid, :string, length: 32 unless column_exists?(:form, :uuid)
    add_column :form_field, :uuid, :string, length: 32 unless column_exists?(:form_field, :uuid)
    add_column :global_property, :uuid, :string, length: 32 unless column_exists?(:global_property, :uuid)
    add_column :hl7_in_archive, :uuid, :string, length: 32 unless column_exists?(:hl7_in_archive, :uuid)
    add_column :hl7_in_error, :uuid, :string, length: 32 unless column_exists?(:hl7_in_error, :uuid)
    add_column :hl7_in_queue, :uuid, :string, length: 32 unless column_exists?(:hl7_in_queue, :uuid)
    add_column :hl7_source, :uuid, :string, length: 32 unless column_exists?(:hl7_source, :uuid)
    add_column :location, :uuid, :string, length: 32 unless column_exists?(:location, :uuid)
    add_column :location_tag, :uuid, :string, length: 32 unless column_exists?(:location_tag, :uuid)
    add_column :logic_rule_definition, :uuid, :string, length: 32 unless column_exists?(:logic_rule_definition, :uuid)
    add_column :logic_rule_token, :uuid, :string, length: 32 unless column_exists?(:logic_rule_token, :uuid)
    add_column :logic_token_registration, :uuid, :string, length: 32 unless column_exists?(:logic_token_registration, :uuid)
    add_column :note, :uuid, :string, length: 32 unless column_exists?(:note, :uuid)
    add_column :notification_alert, :uuid, :string, length: 32 unless column_exists?(:notification_alert, :uuid)
    add_column :notification_alert_recipient, :uuid, :string, length: 32 unless column_exists?(:notification_alert_recipient, :uuid)
    add_column :notification_template, :uuid, :string, length: 32 unless column_exists?(:notification_template, :uuid)
    add_column :obs, :uuid, :string, length: 32 unless column_exists?(:obs, :uuid)
    add_column :order_type, :uuid, :string, length: 32 unless column_exists?(:order_type, :uuid)
    add_column :orders, :uuid, :string, length: 32 unless column_exists?(:orders, :uuid)
    add_column :patient_identifier, :uuid, :string, length: 32 unless column_exists?(:patient_identifier, :uuid)
    add_column :patient_identifier_type, :uuid, :string, length: 32 unless column_exists?(:patient_identifier_type, :uuid)
    add_column :patient_program, :uuid, :string, length: 32 unless column_exists?(:patient_program, :uuid)
    add_column :patient_state, :uuid, :string, length: 32 unless column_exists?(:patient_state, :uuid)
    add_column :patientflags_flag, :uuid, :string, length: 32 unless column_exists?(:patientflags_flag, :uuid)
    add_column :patientflags_tag, :uuid, :string, length: 32 unless column_exists?(:patientflags_tag, :uuid)
    add_column :person, :uuid, :string, length: 32 unless column_exists?(:person, :uuid)
    add_column :person_address, :uuid, :string, length: 32 unless column_exists?(:person_address, :uuid)
    add_column :person_attribute, :uuid, :string, length: 32 unless column_exists?(:person_attribute, :uuid)
    add_column :person_attribute_type, :uuid, :string, length: 32 unless column_exists?(:person_attribute_type, :uuid)
    add_column :person_name, :uuid, :string, length: 32 unless column_exists?(:person_name, :uuid)
    add_column :privilege, :uuid, :string, length: 32 unless column_exists?(:privilege, :uuid)
    add_column :program, :uuid, :string, length: 32 unless column_exists?(:program, :uuid)
    add_column :program_workflow, :uuid, :string, length: 32 unless column_exists?(:program_workflow, :uuid)
    add_column :program_workflow_state, :uuid, :string, length: 32 unless column_exists?(:program_workflow_state, :uuid)
    add_column :regimen_drug_order, :uuid, :string, length: 32 unless column_exists?(:regimen_drug_order, :uuid)
    add_column :relationship, :uuid, :string, length: 32 unless column_exists?(:relationship, :uuid)
    add_column :relationship_type, :uuid, :string, length: 32 unless column_exists?(:relationship_type, :uuid)
    add_column :report_object, :uuid, :string, length: 32 unless column_exists?(:report_object, :uuid)
    add_column :report_schema_xml, :uuid, :string, length: 32 unless column_exists?(:report_schema_xml, :uuid)
    add_column :reporting_report_design, :uuid, :string, length: 32 unless column_exists?(:reporting_report_design, :uuid)
    add_column :reporting_report_design_resource, :uuid, :string, length: 32 unless column_exists?(:reporting_report_design_resource, :uuid)
    add_column :role, :uuid, :string, length: 32 unless column_exists?(:role, :uuid)
    add_column :scheduler_task_config, :uuid, :string, length: 32 unless column_exists?(:scheduler_task_config, :uuid)
    add_column :serialized_object, :uuid, :string, length: 32 unless column_exists?(:serialized_object, :uuid)
    add_column :task, :uuid, :string, length: 32 unless column_exists?(:task, :uuid)
    add_column :users, :uuid, :string, length: 32 unless column_exists?(:users, :uuid)
  end
end

